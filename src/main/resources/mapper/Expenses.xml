<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.phoebe.youtiao.dao.api.ExpensesDao">
    <resultMap id="BaseResultMap" type="expensesEntity">
        <id column="id" property="id"/>
        <result column="budget_id" property="budgetId"/>
        <result column="account_book_id" property="accountBookId"/>
        <result column="name" property="name"/>
        <result column="expenses" property="expenses"/>
        <result column="in_type" property="inType"/>
        <result column="out_type" property="outType"/>
        <result column="status" property="status"/>
        <result column="create_time" property="createTime"/>
        <result column="last_modify_time" property="lastModifyTime"/>
    </resultMap>

    <insert id="addExpenses" parameterType="expensesEntity">
        INSERT INTO expenses(
        `id`,
        `budget_id`,
        `account_book_id`,
        `name`,
        `expenses`,
        `in_type`,
        `out_type`,
        `status`,
        `create_time`,
        `last_modify_time`
        )
        VALUES (
        #{id},
        #{budgetId},
        #{accountBookId},
        #{name},
        #{expenses},
        #{inType},
        #{outType},
        #{status},
        now(),
        now()
        )
    </insert>

    <update id="updateExpenses" parameterType="expensesEntity">
        UPDATE expenses
        <set>
            <if test="expenses != null">
                `expenses` = #{expenses},
            </if>
            <if test="name != null">
                `name` = #{name},
            </if>
            <if test="inType != null">
                `in_Type` = #{inType},
            </if>
            <if test="outType != null">
                `out_Type` = #{outType},
            </if>
            <if test="status != null">
                `status` = #{status},
            </if>
            `last_modify_time` = now()
        </set>
        WHERE `id` = #{id}
    </update>

    <select id="queryExpensesById" parameterType="map" resultMap="BaseResultMap">
        SELECT *
        FROM expenses
        WHERE id = #{id}
    </select>

    <select id="queryExpensesByAccountBookId" parameterType="map" resultMap="BaseResultMap">
        SELECT *
        FROM expenses
        WHERE account_book_id = #{accountBookId}
    </select>

    <select id="queryExpensesByBudgetId" parameterType="map" resultMap="BaseResultMap">
        SELECT *
        FROM expenses
        WHERE budget_id = #{budgetId}
    </select>

    <delete id="deleteExpensesById" parameterType="map">
        DELETE FROM expenses WHERE id=#{id}
    </delete>

</mapper>