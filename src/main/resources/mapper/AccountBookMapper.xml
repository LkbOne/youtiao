<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.phoebe.youtiao.dao.api.AccountBookDao">
    <resultMap id="BaseResultMap" type="accountBookEntity">
        <id column="id" property="id"/>
        <result column="aid" property="aid"/>
        <result column="name" property="name"/>
        <result column="color" property="color"/>
        <result column="status" property="status"/>
        <result column="create_time" property="createTime"/>
        <result column="last_modify_time" property="lastModifyTime"/>
        <result column="open_history" property="openHistory"/>
    </resultMap>

    <insert id="addAccountBook" parameterType="accountBookEntity">
        INSERT INTO account_book(
        `id`,
        `aid`,
        `name`,
        `color`,
        `status`,
        `create_time`,
        `last_modify_time`,
        `open_history`
        )
        VALUES (
        #{id},
        #{aid},
        #{name},
        #{color},
        #{status},
        now(),
        now(),
        #{openHistory}
        )
    </insert>

    <update id="updateAccountBook" parameterType="accountBookEntity">
        UPDATE account_book
        <set>
            <if test="name != null">
                `name` = #{name},
            </if>
            <if test="color != null">
                `color` = #{color},
            </if>
            <if test="status != null">
                `status` = #{status},
            </if>
            `last_modify_time` = now(),
        </set>
        WHERE `id` = #{id}
    </update>


    <update id="updateAccountBookOpenHistory" parameterType="map">
        UPDATE account_book
        <set>
            `open_history` = #{nowStatue}
        </set>
        WHERE open_history = #{beforeStatue}
    </update>
    <update id="updateMostRecentOpenHistory" parameterType="map">
        UPDATE account_book
        <set>
            `open_history` = #{nowStatue}
        </set>
        WHERE id = (select id from ((select id from account_book order by create_time limit #{limit}) as tmp))
    </update>

    <update id="updateAccountBookOpenHistoryById" parameterType="map">
        UPDATE account_book
        <set>
            `open_history` = #{nowStatue}
        </set>
        WHERE id = #{id}
    </update>




    <select id="queryAccountBookById" parameterType="map" resultMap="BaseResultMap">
        SELECT *
        FROM account_book
        WHERE id = #{id}
    </select>

    <select id="listAccountBookByAccountId" parameterType="map" resultMap="BaseResultMap">
        SELECT *
        FROM account_book
        WHERE aid = #{aid} order by create_time
    </select>
    <select id="queryNameById" parameterType="map" resultType="String">
        SELECT name
        FROM account_book
        WHERE id = #{id}
    </select>


    <delete id="deleteAccountBookById" parameterType="map">
        DELETE FROM account_book WHERE id=#{id}
    </delete>

</mapper>